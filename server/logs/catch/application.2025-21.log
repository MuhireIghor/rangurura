{"errorCode":"ERR2505181500193115","level":"error","message":"undefined origin not allowed by Minuza CORS policy","route":"/api/v1/agency","server":"192.168.1.86","timestamp":"2025-05-18 15:00:19"}
{"errorCode":"ERR2505181501283741","level":"error","message":"undefined origin not allowed by Rangurura CORS policy","route":"/api/v1/agency","server":"192.168.1.86","timestamp":"2025-05-18 15:01:28"}
{"errorCode":"ERR2505181501325297","level":"error","message":"undefined origin not allowed by Rangurura CORS policy","route":"/api/v1/agency","server":"192.168.1.86","timestamp":"2025-05-18 15:01:32"}
{"errorCode":"ERR2505181501528495","level":"error","message":"undefined origin not allowed by Rangurura CORS policy","route":"/api/v1/agency","server":"192.168.1.86","timestamp":"2025-05-18 15:01:52"}
{"errorCode":"ERR2505181502075136","level":"error","message":"undefined origin not allowed by Rangurura CORS policy","route":"/api/v1/agency","server":"192.168.1.86","timestamp":"2025-05-18 15:02:07"}
{"errorCode":"ERR2505181502331315","level":"error","message":"undefined origin not allowed by Rangurura CORS policy","route":"/api/v1/agency","server":"192.168.1.86","timestamp":"2025-05-18 15:02:33"}
{"errorCode":"ERR2505181502347648","level":"error","message":"undefined origin not allowed by Rangurura CORS policy","route":"/api/v1/agency","server":"192.168.1.86","timestamp":"2025-05-18 15:02:34"}
{"errorCode":"ERR2505181502353535","level":"error","message":"undefined origin not allowed by Rangurura CORS policy","route":"/api/v1/agency","server":"192.168.1.86","timestamp":"2025-05-18 15:02:35"}
{"errorCode":"ERR2505181503019782","level":"error","message":"undefined origin not allowed by Rangurura CORS policy","route":"/api/v1/agency","server":"192.168.1.86","timestamp":"2025-05-18 15:03:01"}
{"errorCode":"ERR2505181504228198","level":"error","message":"undefined origin not allowed by Rangurura CORS policy","route":"/api/v1/agency","server":"192.168.1.86","timestamp":"2025-05-18 15:04:22"}
{"errorCode":"ERR2505181504235300","level":"error","message":"undefined origin not allowed by Rangurura CORS policy","route":"/api/v1/agency","server":"192.168.1.86","timestamp":"2025-05-18 15:04:23"}
{"errorCode":"ERR2505181516322938","level":"error","message":"Agency with this name or contact email already exists","route":"/api/v1/agency","server":"192.168.1.86","timestamp":"2025-05-18 15:16:32"}
{"errorCode":"ERR2505181517579771","level":"error","message":"\nInvalid `prisma.agency.findUnique()` invocation in\nC:\\Users\\i.muhire\\personal\\rangurura\\server\\src\\services\\agency.service.ts:41:40\n\n  38 \n  39 // Fetch agency by ID\n  40 static async fetchAgencyById(id: number) {\n→ 41   const agency = await prisma.agency.findUnique({\n         where: {\n           id: \"1\"\n               ~~~\n         },\n         include: {\n           categories: true,\n           complaints: true,\n           staff: {\n             include: {\n               user: true\n             }\n           }\n         }\n       })\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","route":"/api/v1/agency/1","server":"192.168.1.86","timestamp":"2025-05-18 15:17:57"}
{"errorCode":"ERR2505181524491211","level":"error","message":"\nInvalid `prisma.category.findUnique()` invocation in\nC:\\Users\\i.muhire\\personal\\rangurura\\server\\src\\services\\category.service.ts:26:44\n\n  23 }\n  24 \n  25 static async getById(id: number) {\n→ 26   const category = await prisma.category.findUnique({\n         where: {\n           id: \"1\"\n               ~~~\n         }\n       })\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","route":"/api/v1/category/all-categories/1","server":"192.168.1.86","timestamp":"2025-05-18 15:24:49"}
{"errorCode":"ERR2505181740168182","level":"error","message":"\nInvalid `prisma.complaint.create()` invocation in\nC:\\Users\\i.muhire\\personal\\rangurura\\server\\src\\services\\complaint.service.ts:18:29\n\n  15   categoryId: number;\n  16   agencyId: number;\n  17 }) {\n→ 18   return prisma.complaint.create(\nForeign key constraint violated on the constraint: `Complaint_agencyId_fkey`","route":"/api/v1/complaint/","server":"192.168.1.86","timestamp":"2025-05-18 17:40:16"}
{"errorCode":"ERR2505181749556630","level":"error","message":"\nInvalid `prisma.complaint.findUnique()` invocation in\nC:\\Users\\i.muhire\\personal\\rangurura\\server\\src\\services\\complaint.service.ts:82:46\n\n  79     agencyId?: number;\n  80   }\n  81 ) {\n→ 82   const complaint = await prisma.complaint.findUnique({\n         where: {\n           id: \"1\"\n               ~~~\n         }\n       })\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","route":"/api/v1/complaint/1","server":"192.168.1.86","timestamp":"2025-05-18 17:49:55"}
{"errorCode":"ERR2505181822379857","level":"error","message":"Unauthorized","route":"/api/v1/complaint/escalate/1","server":"192.168.1.86","timestamp":"2025-05-18 18:22:37","user":{"email":"muhireighor123@gmail.com","id":1}}
{"errorCode":"ERR2505181823184163","level":"error","message":"Complaint not found","route":"/api/v1/complaint/escalate/2","server":"192.168.1.86","timestamp":"2025-05-18 18:23:18","user":{"email":"nakarnaud@gmail.com","id":2}}
{"errorCode":"ERR2505181823237918","level":"error","message":"Unauthorized","route":"/api/v1/complaint/escalate/1","server":"192.168.1.86","timestamp":"2025-05-18 18:23:23","user":{"email":"nakarnaud@gmail.com","id":2}}
{"errorCode":"ERR2505181824355796","level":"error","message":"Unauthorized","route":"/api/v1/complaint/escalate/1","server":"192.168.1.86","timestamp":"2025-05-18 18:24:35","user":{"email":"nakarnaud@gmail.com","id":2}}
{"errorCode":"ERR2505181826146507","level":"error","message":"Unauthorized","route":"/api/v1/complaint/escalate/1","server":"192.168.1.86","timestamp":"2025-05-18 18:26:14","user":{"email":"nakarnaud@gmail.com"}}
{"errorCode":"ERR2505181831362680","level":"error","message":"Responses are only allowed when complaint is under review or resolved.","route":"/api/v1/response/","server":"192.168.1.86","timestamp":"2025-05-18 18:31:36"}
{"errorCode":"ERR2505181844503003","level":"error","message":"Invalid credentials","route":"/api/v1/auth/login","server":"192.168.1.86","timestamp":"2025-05-18 18:44:50"}
{"errorCode":"ERR2505181844565232","level":"error","message":"Invalid credentials","route":"/api/v1/auth/login","server":"192.168.1.86","timestamp":"2025-05-18 18:44:56"}
{"errorCode":"ERR2505181850538335","level":"error","message":"\nInvalid `prisma.response.findUnique()` invocation in\nC:\\Users\\i.muhire\\personal\\rangurura\\server\\src\\services\\complait-response.service.ts:62:28\n\n  59 }\n  60 \n  61 static async fetchResponseById(responseId: number) {\n→ 62   return prisma.response.findUnique({\n         where: {\n           id: \"1\"\n               ~~~\n         }\n       })\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","route":"/api/v1/response/1","server":"192.168.1.86","timestamp":"2025-05-18 18:50:53"}
{"errorCode":"ERR2505182218045529","level":"error","message":"http://localhost:3000 origin not allowed by Rangurura CORS policy","route":"/api/v1/auth/login","server":"192.168.1.86","timestamp":"2025-05-18 22:18:04"}
{"errorCode":"ERR2505182218373498","level":"error","message":"http://localhost:3000 origin not allowed by Rangurura CORS policy","route":"/api/v1/auth/login","server":"192.168.1.86","timestamp":"2025-05-18 22:18:37"}
{"errorCode":"ERR2505190834132442","level":"error","message":"\nInvalid `prisma.complaint.findMany()` invocation in\nC:\\Users\\i.muhire\\personal\\rangurura\\server\\src\\services\\complaint.service.ts:65:29\n\n  62 }\n  63 \n  64 static async getAll() {\n→ 65   return prisma.complaint.findMany(\nCan't reach database server at `ep-round-bread-a43tcpzp-pooler.us-east-1.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-round-bread-a43tcpzp-pooler.us-east-1.aws.neon.tech:5432`.","route":"/api/v1/complaint/all","server":"172.44.1.214","timestamp":"2025-05-19 08:34:13"}
{"errorCode":"ERR2505190834135922","level":"error","message":"\nInvalid `prisma.complaint.findMany()` invocation in\nC:\\Users\\i.muhire\\personal\\rangurura\\server\\src\\services\\complaint.service.ts:65:29\n\n  62 }\n  63 \n  64 static async getAll() {\n→ 65   return prisma.complaint.findMany(\nCan't reach database server at `ep-round-bread-a43tcpzp-pooler.us-east-1.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-round-bread-a43tcpzp-pooler.us-east-1.aws.neon.tech:5432`.","route":"/api/v1/complaint/all","server":"172.44.1.214","timestamp":"2025-05-19 08:34:13"}
{"errorCode":"ERR2505190857387546","level":"error","message":"\nInvalid `prisma.complaint.update()` invocation in\nC:\\Users\\i.muhire\\personal\\rangurura\\server\\src\\services\\complaint.service.ts:146:29\n\n  143 }\n  144 \n  145 static async markAsResolved(id: number) {\n→ 146   return prisma.complaint.update({\n          where: {\n            id: \"4\"\n                ~~~\n          },\n          data: {\n            status: \"RESOLVED\"\n          }\n        })\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","route":"/api/v1/complaint/mark-as-resolved/4","server":"172.44.1.214","timestamp":"2025-05-19 08:57:38"}
{"errorCode":"ERR2505190858158079","level":"error","message":"\nInvalid `prisma.complaint.update()` invocation in\nC:\\Users\\i.muhire\\personal\\rangurura\\server\\src\\services\\complaint.service.ts:146:29\n\n  143 }\n  144 \n  145 static async markAsResolved(id: number) {\n→ 146   return prisma.complaint.update({\n          where: {\n            id: \"4\"\n                ~~~\n          },\n          data: {\n            status: \"RESOLVED\"\n          }\n        })\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","route":"/api/v1/complaint/mark-as-resolved/4","server":"172.44.1.214","timestamp":"2025-05-19 08:58:15"}
{"errorCode":"ERR2505190859527457","level":"error","message":"\nInvalid `prisma.complaint.update()` invocation in\nC:\\Users\\i.muhire\\personal\\rangurura\\server\\src\\services\\complaint.service.ts:146:29\n\n  143 }\n  144 \n  145 static async markAsResolved(id: number) {\n→ 146   return prisma.complaint.update({\n          where: {\n            id: \"4\"\n                ~~~\n          },\n          data: {\n            status: \"RESOLVED\"\n          }\n        })\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","route":"/api/v1/complaint/mark-as-resolved/4","server":"172.44.1.214","timestamp":"2025-05-19 08:59:52"}
{"errorCode":"ERR2505190900135100","level":"error","message":"\nInvalid `prisma.complaint.update()` invocation in\nC:\\Users\\i.muhire\\personal\\rangurura\\server\\src\\services\\complaint.service.ts:146:29\n\n  143 }\n  144 \n  145 static async markAsResolved(id: number) {\n→ 146   return prisma.complaint.update({\n          where: {\n            id: \"4\"\n                ~~~\n          },\n          data: {\n            status: \"RESOLVED\"\n          }\n        })\n\nArgument `id`: Invalid value provided. Expected Int, provided String.","route":"/api/v1/complaint/mark-as-resolved/4","server":"172.44.1.214","timestamp":"2025-05-19 09:00:13"}
